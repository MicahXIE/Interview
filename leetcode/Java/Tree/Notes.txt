Binary tree is a tree data structure in which each node has at most two children, which are referred to as the left child and the right child.

 Binary search tree (BST), also called an ordered or sorted binary tree, is a rooted binary tree whose internal nodes each store a key greater than all the keys in the node's left subtree and less than those in its right subtree.
 	2
1		3

dp, 卡特兰数
fibonacci (LT70 Climbing Stairs)
Morris (LT94)

状态转移算法

LT98 1ms 42.67% check solution

前序遍历(Pre-Order Traversal) : 指先访问根，然后访问子树的遍历方式
中序遍历(In-Order Traversal) : 指先访问左（右）子树，然后访问根，最后访问右（左）子树的遍历方式
后序遍历(Post-Order Traversal) : 指先访问子树，然后访问根的遍历方式

LT105 Construct Binary Tree from Preorder and Inorder Traversal (3ms 64.17%)
LT114 Flatten Binary Tree to Linked List (1ms 43.92%)
LT139 Word Break (8ms 46.78%)
LT146 LRU Cache (21ms, 36.50%) C++ (220ms, 40.81%)
LT148 Bottom Up Merge Sort


To do list:

LT148 Sort List
LT406 Queue Reconstruction by Height
LT124 Binary Tree Maximum Path Sum
二叉树中的最大路径和

1) Find recursive relation
2) Recursive (top-down)
3) Recursive + memo (top-down)
4) Iterative + memo (bottom-up)
5) Iterative + N variables (bottom-up)

Stack<Pair<TreeNode, Integer>> stack = new Stack<Pair<TreeNode, Integer>>();

use Deque to replace Stack
Deque<TreeNode> stack = new ArrayDeque<>(); (push, pop)
LinkedList<TreeNode> stack = new LinkedList<TreeNode>(); (add, removeLast)

Deque可以由ArrayDeuqe或者LinkedList实现，它们两者使用的区别以及优劣也就是数组和链表的区别，你懂得。

https://chengfeng96.com/blog/2018/01/20/Java%E4%B8%AD%E7%94%A8Deque%E6%8E%A5%E5%8F%A3%E4%BB%A3%E6%9B%BFStack%E6%8E%A5%E5%8F%A3%E5%AE%8C%E6%88%90%E6%A0%88%E5%8A%9F%E8%83%BD/

https://juejin.im/post/6844903838114136071


quick select
Hoare's Partition vs Lomuto's Partition


P就是能在多项式时间内解决的问题，NP就是能在多项式时间验证答案正确与否的问题。
所以P是否等于NP实质上就是在问，如果对于一个问题我能在多项式时间内验证其答案的正确性，那么我是否能在多项式时间内解决它？



